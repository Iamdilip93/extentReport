<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7485" started-at="2021-10-21T14:49:59Z" finished-at="2021-10-21T14:50:07Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7485" started-at="2021-10-21T14:49:59Z" finished-at="2021-10-21T14:50:07Z">
      <class name="testclasses.DemoTestClass">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="beforeClass" is-config="true" duration-ms="5990" started-at="2021-10-21T14:49:59Z" finished-at="2021-10-21T14:50:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testFailed()[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="testFailed" duration-ms="16" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Executing Fail Test Method]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Executing Fail Test Method
at org.testng.Assert.fail(Assert.java:96)
at testclasses.DemoTestClass.testFailed(DemoTestClass.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailed -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="afterMethod" is-config="true" duration-ms="231" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFailed status=FAILURE method=DemoTestClass.testFailed()[pri:0, instance:testclasses.DemoTestClass@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testSkipped()[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="testSkipped" duration-ms="3" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Executing Skipped Test Case]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Executing Skipped Test Case
at testclasses.DemoTestClass.testSkipped(DemoTestClass.java:95)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSkipped -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSkipped status=SKIP method=DemoTestClass.testSkipped()[pri:0, instance:testclasses.DemoTestClass@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testSuccessfull()[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="testSuccessfull" duration-ms="2" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfull -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfull status=SUCCESS method=DemoTestClass.testSuccessfull()[pri:0, instance:testclasses.DemoTestClass@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testclasses.DemoTestClass@343f4d3d]" name="afterClass" is-config="true" duration-ms="1206" started-at="2021-10-21T14:50:05Z" finished-at="2021-10-21T14:50:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testclasses.DemoTestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
